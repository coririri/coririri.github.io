<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-11-21T16:07:15+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Gomdarachi의 기술블로그</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><entry><title type="html">오픈 소스 라이선스</title><link href="http://localhost:4000/frontendbasic/2023-11-21-%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%EB%9D%BC%EC%9D%B4%EC%84%A0%EC%8A%A4/" rel="alternate" type="text/html" title="오픈 소스 라이선스" /><published>2023-11-21T15:56:24+09:00</published><updated>2023-11-21T16:07:15+09:00</updated><id>http://localhost:4000/frontendbasic/%EC%98%A4%ED%94%88%20%EC%86%8C%EC%8A%A4%20%EB%9D%BC%EC%9D%B4%EC%84%A0%EC%8A%A4</id><content type="html" xml:base="http://localhost:4000/frontendbasic/2023-11-21-%EC%98%A4%ED%94%88-%EC%86%8C%EC%8A%A4-%EB%9D%BC%EC%9D%B4%EC%84%A0%EC%8A%A4/"><![CDATA[<h2 id="요약">요약</h2>
<p>패스트캠퍼스 프론트엔드 기초 강의를 수강하며 오픈 소스 라이선스에 대해서 학습한 내용입니다.</p>

<h2 id="본론">본론</h2>
<h3 id="오픈-소스란">오픈 소스란?</h3>
<p>어떤 제품을 개발하는 과정에서 필요한 소스 코드나 설계도를, 누구나 접근해서
열람할 수 있도록 공개하는 것. (당연히 저작권이 있다.)</p>

<p><strong>아래 두가지는 꼭 확인</strong><br />
개인 사용가능<br />
무료로 사용 가능</p>

<ul>
  <li>아파치 라이선스<br />
좀더 폭 넓게</li>
  <li>MIT 라이선스<br />
특별한 제약은 없지만, 개인 소스에 이 라이선스를 사용하고 있다는 표시만 지켜주면 됨.</li>
  <li>BSD 라이선스<br />
MIT와 동일</li>
  <li>Beerware<br />
자유롭게 사용 가능</li>
</ul>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="frontendBasic" /><summary type="html"><![CDATA[요약 패스트캠퍼스 프론트엔드 기초 강의를 수강하며 오픈 소스 라이선스에 대해서 학습한 내용입니다.]]></summary></entry><entry><title type="html">웹에서 사용하는 이미지</title><link href="http://localhost:4000/frontendbasic/2023-11-21-%EC%9B%B9%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EB%AF%B8%EC%A7%80/" rel="alternate" type="text/html" title="웹에서 사용하는 이미지" /><published>2023-11-21T15:37:24+09:00</published><updated>2023-11-21T16:01:36+09:00</updated><id>http://localhost:4000/frontendbasic/%EC%9B%B9%EC%97%90%EC%84%9C%20%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%20%EC%9D%B4%EB%AF%B8%EC%A7%80</id><content type="html" xml:base="http://localhost:4000/frontendbasic/2023-11-21-%EC%9B%B9%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EB%AF%B8%EC%A7%80/"><![CDATA[<h2 id="요약">요약</h2>
<p>패스트캠퍼스 프론트엔드 기초 강의를 수강하며 웹에서 사용하는 이미지들을 정리한 내용입니다.</p>

<h2 id="본론">본론</h2>

<h3 id="비트맵">비트맵</h3>
<p>각각의 픽셀들이 모여서 만들어진 이미지로(레스터화 된 이미지라고도 불림)</p>

<p><strong>장점</strong></p>

<ul>
  <li>정교하고 다양한 색상을 자연스럽게 표현</li>
</ul>

<p><strong>사용 처</strong><br />
  보통 사용되는 이미지들 ex. jpg(jpeg), png</p>
<ul>
  <li>jpg(jpeg)<br />
  <strong>특징</strong>
    <ul>
      <li>손실되면서 압축 (저장될수록 용량이 줄어들고, 손실된다.)</li>
      <li>표현 색상도가 뛰어남</li>
      <li>가장 널리 쓰이는 이미지 포맷</li>
    </ul>
  </li>
  <li>png<br />
  <strong>특징</strong>
    <ul>
      <li>비손실 압축(용량은 안 줄어듬)</li>
      <li>투명도(알파) 지원</li>
      <li>W3C 권장 포맷</li>
    </ul>
  </li>
  <li>gif<br />
  <strong>특징</strong>
    <ul>
      <li>비손실 압축</li>
      <li>여러 장의 이미지를 한 개의 파일에 담을 수 있음</li>
      <li>(움짤, 애니메이션)</li>
      <li>다양한 색상 표현에는 적합하지 않음</li>
    </ul>
  </li>
  <li>webp<br />
  <strong>특징</strong>
    <ul>
      <li>jpg, png, gif를 모두 대체할 수 있는 구글이 개발한 이미지 포맷</li>
      <li>손실/비손실 압축 동시 지원</li>
      <li>애니메이션 기능 지원</li>
      <li>투명도(알파) 지원</li>
      <li>최신 기술이기 때문에 크로스 브라우징 확인(하위 호환성 확인)</li>
    </ul>
  </li>
</ul>

<h3 id="벡터">벡터</h3>
<p>점, 선, 면의 위치(좌표) 등 수학적 정보의 형태로 이루어진 이미지</p>

<p><strong>장점</strong></p>

<ul>
  <li>확대/축소에서 자유로움, 용량 변화가 없음.</li>
</ul>

<p><strong>사용 처</strong>
  단순 구조의 로고 및 아이콘 (머터리얼 디자인): 고품질 디지털 경험을 구축할 수 있도록
  구글에서 만든 디자인 시스템 ex. svg</p>
<ul>
  <li>svg<br />
  <strong>특징</strong>
    <ul>
      <li>해상도의 영향에서 자유로움</li>
      <li>CSS와 JS로 제어 가능</li>
      <li>파일 및 코드 삽입 가능</li>
    </ul>
  </li>
</ul>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="frontendBasic" /><summary type="html"><![CDATA[요약 패스트캠퍼스 프론트엔드 기초 강의를 수강하며 웹에서 사용하는 이미지들을 정리한 내용입니다.]]></summary></entry><entry><title type="html">프론트엔드의 기초</title><link href="http://localhost:4000/frontendbasic/2023-11-21-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EC%9D%98-%EA%B8%B0%EC%B4%88/" rel="alternate" type="text/html" title="프론트엔드의 기초" /><published>2023-11-21T14:52:24+09:00</published><updated>2023-11-21T15:57:29+09:00</updated><id>http://localhost:4000/frontendbasic/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EC%9D%98%20%EA%B8%B0%EC%B4%88</id><content type="html" xml:base="http://localhost:4000/frontendbasic/2023-11-21-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EC%9D%98-%EA%B8%B0%EC%B4%88/"><![CDATA[<h2 id="요약">요약</h2>
<p>패스트캠퍼스 프론트엔드 기초 강의를 수강하며 정리한 내용들입니다.</p>

<h2 id="서론">서론</h2>

<h3 id="프론트엔드-개발이란">프론트엔드 개발이란?</h3>
<p>HTML, CSS, JS를 사용해 데이터를 그래픽 사용자 인터페이스(GUI)로 변환하고,
그것으로 사용자와 상호 작용할 수 있도록 하는 것.</p>

<h2 id="본론">본론</h2>

<h3 id="htmlcss-그리고-js">html,css 그리고 js</h3>
<ul>
  <li>html
Hyper Text Markup Language(Hyper Text: 링크 텍스트)의 약자
페이지의 제목, 문단, 표, 이미지 와 같은 웹의 구조를 담당</li>
  <li>CSS
Cascading Style Sheets의 약자
실제 화면에 표시되는 콘텐츠를 꾸며주는 디자인을 담당</li>
  <li>JS
콘텐츠를 바꾸고 움직이는 등 페이지를 동작시키는 동적 처리를 담당</li>
</ul>

<h3 id="웹앱의-동작-방식">웹앱의 동작 방식</h3>
<p><img src="../images/howWebAppsWork.jpg" alt="웹 앱의 동작 방식 설명 이미지" />
내가 해야 할일은 html, css, js를 활용해 열심히 로컬환경에서 웹을 제작하고 서버에 업로드해
사용자가 서버에 요청하면 렌더링에 필요한 html, css, js파일들을 전송할 수 있게 해주는 것.</p>

<h3 id="웹표준과-브라우저">웹표준과 브라우저</h3>
<p>W3C에서 여러 단계를 거쳐 웹 표준 기술을 지정한다.
해당 기술은 브라우저(공급업체)에서 작동하고 공급업체들은 표준 기술을 참고하여 브라우저를 제작한다.  <br />
<strong>크로스 브라우징</strong>:이러한 공급업체들도 웹 표준 기술을 해석하는 방식이 다르기 때문에 브러우저마다 동작 방식이 다를 수 있다.<br />
<strong>뷰표트</strong>: 하나의 웹 페이지가 렌더링 되는 영역</p>

<h3 id="특수-문자-용어">특수 문자 용어</h3>
<ul>
  <li>그레이브 기호(백틱) : 1 왼쪽에 있음</li>
  <li>틸드 : 1 왼쪽에 있음</li>
  <li>골뱅이는 assing으로 불림</li>
  <li>^: 캐럿: ~의 이상을 표현</li>
  <li>&amp;: 퍼센트, 앰퍼센드</li>
  <li>-: 하이픈, 대시, 마이너스</li>
  <li>_: 로대시, 밑줄, 언더 스코어</li>
  <li>”: 큰 따움표</li>
  <li>’: 작은 따움표</li>
  <li>: 콜런</li>
  <li>; : 세미 콜론</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>: 버티컬 바</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>() : 소괄호</li>
  <li>{} : 줄괄포 , 브레이스</li>
  <li>[] : 대괄호, 브래킷</li>
</ul>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="frontendBasic" /><summary type="html"><![CDATA[요약 패스트캠퍼스 프론트엔드 기초 강의를 수강하며 정리한 내용들입니다.]]></summary></entry><entry><title type="html">SPA 프레임워크, 라이브러리의 비교 글</title><link href="http://localhost:4000/engineeringwriting/2023-10-01-4%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C/" rel="alternate" type="text/html" title="SPA 프레임워크, 라이브러리의 비교 글" /><published>2023-10-01T20:52:24+09:00</published><updated>2023-11-14T20:28:14+09:00</updated><id>http://localhost:4000/engineeringwriting/4%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C</id><content type="html" xml:base="http://localhost:4000/engineeringwriting/2023-10-01-4%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C/"><![CDATA[<p>2023 공학작문과 발표 / 과제 #3. Survey Work　　　　　　　　　　　　　　　201924435 김선우</p>

<h1 id="spa-프레임워크-라이브러리의-비교-글">SPA 프레임워크, 라이브러리의 비교 글</h1>

<h3 id="글의-요약">글의 요약</h3>
<p>  이 글은 javascript의 대표적인 SPA 라이브러리 및 프레임워크인 리액트, 뷰, 앵귤러를 성능과 인지도 면에서 비교하는 글입니다. 이 글을 통해서 독자는 본인의 프로젝트에 어떤 기술 스택을 도입할 지와 어떤 것을 배울지에 대해 도움을 받을 수 있을 것입니다.</p>

<h2 id="서론">서론</h2>
<p>  요즘 프론트엔드 개발 분야로 진출하려는 분들에게는 SPA(Single Page Application)를 공부하는 것이 매우 중요한 부분이라고 생각합니다. 과거에는 주로 MPA(Multiple Page Application)가 사용되었지만, SPA에는 여러 가지 장점이 있습니다. 웹 애플리케이션을 SPA로 구현하기 위해 다양한 라이브러리와 프레임워크가 도움이 되는데 그 중에서도 리액트, 앵귤러, 뷰라는 세 가지 주요 라이브러리/프레임워크가 있습니다. 이 글에서는 이 세 가지를 비교하는 서베이를 통해 각각의 장단점과 성능 면에서 어떤게 효율적인지, 그리고 대중적으로 얼마나 알려져 있는지에 대해 알아보겠습니다.</p>

<h2 id="본론">본론</h2>
<p>  리액트, 앵귤러, 뷰 3가지를 비교하기 위해 저만의 기준점을 두었습니다. 첫 번째로 성능 두번째로 인지도 입니다. 이 두가지를 정한 이유는 아마도 많은 독자분들은 개발자일 것이고, 자신의 프로젝트에 어떤 기술 스택을 도입 할 것인가 고민할 때 가장 많이 고려되는 부분이라고 생각하기 때문입니다.
  첫 번째로 성능에 대해서 알아 보겠습니다. 사실 성능을 비교한다는 것은 꽤 힘들기 때문에 저는 해외 논문과 구글 학술지를 통한 연구 결과를 기반으로 이 세 가지 프레임워크를 분석하겠습니다.</p>
<blockquote>
  <p>the application architecture is quite similar for all three
frameworks, as well as the amount of code written by users is quite the same.” p.35
먼저 논문에 의하면 동일한 아키텍쳐에서 동일한 응용프로그램을 사용하여 테스트를 진행 하였다고 합니다.</p>
</blockquote>

<blockquote>
  <p>The angular distro was 15.7 Mega bites, that is 15 700
Kilobytes, making it 25 times larger than Vue and about 27 times larger than React production build. p.39
가장 먼저 빌드 시 파일 크기는 앵귤러가 15700Kb로 뷰보다는 25배, 리액트보다는 27배 크다고 합니다.</p>
</blockquote>

<p>이는 앵귤러가 리액트나 뷰에 비해서 비교적 큰 파일 크기를 가진다고 볼 수 있는데, 그 만큼 초기 웹 로딩 속도가 느릴 것 으로 예상됩니다. 아마 초기 속도가 중요한 환경에서는 리액트나 뷰를 사용하는 것이 더 좋은 선택일수 있습니다.
논문 성능 비교 부분에 의하면 페이지 로딩 속도에서 예상과 같이, 앵귤러가 리액트와 뷰에 비해 약 1.7배 정도 느렸습니다. 그리고 1000개의 행을 만드는 부분에서는 뷰가 가장 빨랐으며, 그러나 10000개의 행을 만드는 경우 앵귤러는 큰 폭으로 시간이 오래 걸렸습니다. Re-create 1000에서는 특별한 정보가 없었고, Re-create 10000에서도 앵귤러는 큰 폭으로 시간이 오래 걸렸습니다. 전반적으로 뷰가 가장 빨랐고, 리액트가 그 다음이었으며, 앵귤러가 이 세 가운데 가장 느렸습니다. 빌드 파일 크기 측면에서는 리액트가 가장 작았지만, 뷰의 성능이 가장 우수했습니다. 앵귤러는 큰 폭으로 성능과 파일 크기 모두에서 다소 느린 경향을 보였습니다. 이러한 결과는 웹 애플리케이션을 개발할 때 프레임워크 선택에 중요한 고려 사항을 제공합니다.</p>

<p>  다음으로, 이 세 가지 프레임워크의 인지도에 대해 알아보겠습니다. 인지도를 측정하는 방법은 다양합니다. 먼저, GitHub 스타 수와 이슈 수를 조사했습니다. 기간은 2023.10.01부터 지난 1년으로 제한 하여 조사 하였습니다. 또한 npm 다운로드 수도 확인했습니다. 더불어, 해당 기술 스택을 사용 중인 국내 및 해외 기업을 조사하고, 마지막으로 해외에서 유명한 개발자들이 질문과 응답을 하는 커뮤니티인 Stack Overflow의 트렌드를 살펴보았습니다.
기간은 2018.01.01부터 2023.10.01으로 제한 하여 조사 하였습니다.</p>
<ul>
  <li>GitHub 인지도:
GitHub 스타 수와 이슈 수는 프레임워크의 인기와 활발한 개발 커뮤니티의 표시입니다. 스타 수가 높고 이슈가 활발하게 관리되고 있다면, 해당 프레임워크가 활발하게 사용되고 있음을 나타낼 수 있습니다.</li>
  <li>npm 다운로드 수
npm 패키지 다운로드 수는 해당 프레임워크의 사용자 수와 관련이 있습니다. 더 많은 다운로드는 해당 프레임워크가 널리 사용되고 있다는 것을 시사합니다.</li>
  <li>기업 사용 사례
기업들이 어떤 프레임워크를 선택하고 있는지를 조사하는 것은 해당 기술 스택의 상용화 정도를 나타내는 중요한 지표입니다. 국내와 해외에서 어떤 대형 기업이나 스타트업이 해당 프레임워크를 사용하는지 확인할 수 있습니다.</li>
  <li>Stack Overflow 트렌드
Stack Overflow는 개발자들이 기술적인 질문과 답변을 주고받는 중요한 커뮤니티입니다. 해당 프레임워크와 관련된 질문과 답변의 양과 트렌드는 해당 기술 스택의 인기와 활발한 사용을 나타냅니다.</li>
</ul>

<p>이러한 다양한 인지도 측정 방법을 통해 리액트, 앵귤러, 뷰 중 어떤 것이 개발자들과 기업들 사이에서 가장 널리 사용되고 있는지를 파악할 수 있습니다.
조사한 바에 의하면 리액트가 가장 높은 인지도를 가지고 있는 것으로 나타났습니다. 여러 인지도 측정 요소를 고려하면 다음과 같은 결론을 내릴 수 있습니다.</p>
<ul>
  <li>GitHub Stars 및 Issues
리액트는 GitHub Stars 수에서 압도적으로 우세하며, 뷰와 리액트는 Issues 수가 비슷합니다. 따라서 GitHub에서의 인지도로 보면 리액트가 압도적으로 높은 인지도를 가지고 있습니다.</li>
  <li>npm 다운로드 수
리액트는 npm 다운로드 수에서 앵귤러의 3.8배, 뷰의 20배 더 많은 다운로드 수를 기록하고 있습니다. 이를 통해 npm을 통한 패키지 다운로드에서도 리액트가 가장 높은 인지도를 가지고 있다는 것을 확인할 수 있습니다.
-국내 사용 기업
국내에서는 리액트와 앵귤러가 다양한 기업에서 사용되고 있으며, 두 프레임워크를 함께 사용하는 기업도 많습니다. 뷰는 주로 네이버와 카카오와 같은 큰 기업에서 사용되는 것으로 보입니다.
-해외 사용 기업
해외에서는 리액트는 페이스북을 비롯한 대기업들이 주로 사용하고 있으며, 앵귤러는 전문 프로그램 기업에서 많이 사용되는 경향을 보입니다. 뷰는 구글을 필두로 IT 회사들에서 많이 사용되는 것으로 나타납니다.
-Stack Overflow Trends
Stack Overflow Trends를 통해 리액트가 2019년을 기점으로 앵귤러를 넘어서며, 이제는 앵귤러와 뷰를 합쳐도 리액트를 따라갈 수 없는 것으로 보입니다.</li>
</ul>

<p>종합적으로 보면, 리액트가 다양한 측면에서 가장 높은 인지도를 가지고 있는 것으로 판단됩니다.</p>

<p>  조사 방법은 성능 비교는 구글 학술지에서 해외 논문을 참고 하여 조사 하였고, Github Issue와 star 수는 “https://npmtrends.com/angular-vs-react-vs-vue” 사이트에서 조사 하였습니다. 다음으로 npm downloads수는 “https://npm-stat.com/charts.html?package=react&amp;package=vue&amp;package=angular&amp;from=2018-01-01&amp;to=2023-10-01” 사이트에서 조사 하였고, 국내/외 사용 기업 채용 공고를 참고 하여 조사 하였습니다. 마지막으로 Stack Overflow Trends는 “https://insights.stackoverflow.com/trends?tags=reactjs%2Cvue.js%2Cangularreact”사이트에서 조사 하였습니다.</p>

<h2 id="결론">결론</h2>
<p>결론도 성능과 인지도 두가지로 분류하여 정리하겠습니다.
  먼저 성능을 정리한 표입니다</p>
<h3 id="리액트-뷰-앵귤러-성능-비교-표">리액트, 뷰, 앵귤러 성능 비교 표</h3>
<p><img src="/assets/img/writingCS/PerformanceCompare.jpg" alt="image 성능 비교표" /></p>

<p>위 표에 의하면 앞서 본문에서 정리한 바와 같이 뷰의 성능이 우수한 것이 한 눈에 들어오고 앵귤러는 성능이 비교적 안 좋다는 것도 알 수 있습니다. 리액트는 뷰 보다는 느리지만 심한 차이를 보이지는 않습니다. 따라서 성능만 보자면 리액트 뷰 둘다 선택지에 둘만하다고 생각합니다.</p>

<p>  다음으로는 인지도 비교를 정리한 표입니다.</p>
<h3 id="리액트-뷰-앵귤러-인지도-비교-표">리액트, 뷰, 앵귤러 인지도 비교 표</h3>
<p><img src="/assets/img/writingCS/shareTable.jpg" alt="image 인지도 비교 표" /></p>
<h3 id="리액트-뷰-앵귤러-스택오버플로우-트랜드-비교-그래프">리액트, 뷰, 앵귤러 스택오버플로우 트랜드 비교 그래프</h3>
<p><img src="/assets/img/writingCS/StackOverFlowTrend.jpg" alt="image 스택오버플로우 트랜드 비교포" />
인지도 면에서는 어느 부문이나 리액트가 압도적으로 우위에 있다는 것을 확인해보 실 수 있습니다. 그러나 국/내외 사용기업에서 앵귤러와 뷰도 꽤 쓰이는 것을 알 수 있는데, 이유는 다양하지만 그 중 한가지는 앵귤러는 협업에 가장 띄어난 프레임워크라고 합니다 따라서 협업이 중요한 큰 기업에선느 앵귤러를 사용할 매리트가 생기는 거죠. 또 뷰는 셋중 가장 학습 곡선이 낮다고 합니다 따라서 뷰도 뷰만의 특수한 장점이 있는 것 이죠.</p>

<p>  종합적으로 제 생각을 정리하자면 리액트가 성능면에서는 뷰에 못 미쳤지만 개발할 때 참고할만한 커뮤니티는 굉장히 중요하기 때문에 참고할만한 자료들이 많은 리액트가 가장 합리적인 선택지라고 생각이 듭니다. 정답이 있는 문제는 아니지만 이 글내에서 비교해본 결과만 따지고 보면 그렇다는 것 입니다. 여러분들도 많은 비교를 통해 합리적인 기술 스택 도입을 하시기 바랍니다</p>

<h2 id="참고문헌">참고문헌</h2>
<p>참고 논문 (https://www.theseus.fi/bitstream/handle/10024/261970/Thesis-Elar-Saks.pdf)</p>

<p>github star&amp;Iussue 조사 사이트 (https://npmtrends.com/angular-vs-react-vs-vue)</p>

<p>npm download 조사 사이트 (https://npm-stat.com/charts.html?package=react&amp;package=vue&amp;package=angular&amp;from=2018-01-01&amp;to=2023-10-01)</p>

<p>stackoverflow trends 조사 사이트 (https://insights.stackoverflow.com/trends?tags=reactjs%2Cvue.js%2Cangularreact)</p>

<p>블로그 작성 글: https://coririri.github.io/writingforcs/2023-10-01-4%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C/</p>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="engineeringWriting" /><summary type="html"><![CDATA[2023 공학작문과 발표 / 과제 #3. Survey Work　　　　　　　　　　　　　　　201924435 김선우]]></summary></entry><entry><title type="html">그래프 표현 방법</title><link href="http://localhost:4000/datastruct/2023-09-21-%EA%B7%B8%EB%9E%98%ED%94%84-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95/" rel="alternate" type="text/html" title="그래프 표현 방법" /><published>2023-09-21T20:52:24+09:00</published><updated>2023-11-14T20:29:38+09:00</updated><id>http://localhost:4000/datastruct/%EA%B7%B8%EB%9E%98%ED%94%84%20%ED%91%9C%ED%98%84%20%EB%B0%A9%EB%B2%95</id><content type="html" xml:base="http://localhost:4000/datastruct/2023-09-21-%EA%B7%B8%EB%9E%98%ED%94%84-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95/"><![CDATA[]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="dataStruct" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">비평 글</title><link href="http://localhost:4000/engineeringwriting/2023-09-21-3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C/" rel="alternate" type="text/html" title="비평 글" /><published>2023-09-21T20:52:24+09:00</published><updated>2023-11-21T14:53:02+09:00</updated><id>http://localhost:4000/engineeringwriting/3%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C</id><content type="html" xml:base="http://localhost:4000/engineeringwriting/2023-09-21-3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C/"><![CDATA[<p>2023 공학작문과 발표 / 과제 #2. 나쁜 글　　　　　　　　　　　　　　　　　　　201924435 김선우</p>
<h1 id="네이버-ai검색-큐복합-의도-분석-아직은-2-부족">네이버 AI검색 ‘큐:’…‘복합 의도’ 분석, 아직은 2% 부족</h1>
<ul>
  <li>글의 요약
  이 글은 기사에 대한 비평을 공학적 관점에서 적은 글입니다.</li>
  <li>
    <p>글을 선택한 이유
이번에 새롭게 출시한 네이버 생성형 AI 큐에 대한 반응을 알아보기 위해서 
이 글을 보았는데, 공학적 관점에서는 받아드리기 힘든 내용들이 많아서 선택하게
되였습니다.</p>
  </li>
  <li>공학적 관점에서 잘 못 된 부분들
    <ul>
      <li>인용 문제
        <blockquote>
          <p>“네이버에 따르면 큐:는 △질의 이해 △답변이 포함된 출처 수집 △답변과 출처의 사실성 일치 확인 등 3단계 기술적 과정을 통해 기존 생성형 AI 서비스가 지닌 한계점인 환각(할루시네이션)을 최소화하도록 개발됐다.”</p>
        </blockquote>

        <p>기사 본문에서 네어의 말을 인용 하였지만 어디서 가져온 문장인지 출처가 전혀 없어 제 기준에서 공학적으로 잘못 된 부분이라 생각했습니다.</p>
      </li>
      <li>기준의 모호성
        <blockquote>
          <p>“아직은 부족한 데이터 때문인지 단순한 질문에도 검색 목적을 한 번에 충족시킬 만한 답변은 잘 내놓지 못했다.”</p>
        </blockquote>

        <p>윗 기사 인용된 부분에서 단순한 질문이라면 단순함의 기준이 있어야 할 텐데 기자 작성자 입장에서 단순함을 정의하여 글을 쓴거같아 공학적 관점에서 잘못 된 부분이라 생각 했습니다.</p>
      </li>
      <li>반복 된 표현
        <blockquote>
          <p>“우선, 프롬프트(질문)의 맥락적 의미를 파악한다는 느낌보다는 프롬프트 속 핵심 단어를 몇 가지 캐치해서 검색한 결과를 생성해주는 수준이라는 느낌이 강했다.”</p>
        </blockquote>

        <p>윗 기사 인용된 부분에서 기사 작성자 본인의 느낌을 강조하기 위해 느낌이라는 단어를 한 문장에서 2번이나 쓴 부분에서 중언부언의 느낌이 강했습니다.</p>
      </li>
    </ul>
  </li>
</ul>

<p><a href="https://www.ceoscoredaily.com/page/view/2023092116204975099">참고 기사</a></p>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="engineeringWriting" /><summary type="html"><![CDATA[2023 공학작문과 발표 / 과제 #2. 나쁜 글　　　　　　　　　　　　　　　　　　　201924435 김선우 네이버 AI검색 ‘큐:’…‘복합 의도’ 분석, 아직은 2% 부족 글의 요약 이 글은 기사에 대한 비평을 공학적 관점에서 적은 글입니다. 글을 선택한 이유 이번에 새롭게 출시한 네이버 생성형 AI 큐에 대한 반응을 알아보기 위해서 이 글을 보았는데, 공학적 관점에서는 받아드리기 힘든 내용들이 많아서 선택하게 되였습니다.]]></summary></entry><entry><title type="html">기술 면접 대비 스터디</title><link href="http://localhost:4000/csstudy/algorithm/2023-08-09-%EA%B8%B0%EC%88%A0-%EB%A9%B4%EC%A0%91-%EB%8C%80%EB%B9%84/" rel="alternate" type="text/html" title="기술 면접 대비 스터디" /><published>2023-08-09T00:28:24+09:00</published><updated>2023-10-01T22:00:51+09:00</updated><id>http://localhost:4000/csstudy/algorithm/%EA%B8%B0%EC%88%A0%20%EB%A9%B4%EC%A0%91%20%EB%8C%80%EB%B9%84</id><content type="html" xml:base="http://localhost:4000/csstudy/algorithm/2023-08-09-%EA%B8%B0%EC%88%A0-%EB%A9%B4%EC%A0%91-%EB%8C%80%EB%B9%84/"><![CDATA[]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="csStudy" /><category term="algorithm" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Introducing Hydejack 9</title><link href="http://localhost:4000/example/2020-07-03-introducing-hydejack-9/" rel="alternate" type="text/html" title="Introducing Hydejack 9" /><published>2020-07-03T00:00:00+09:00</published><updated>2023-10-01T22:00:51+09:00</updated><id>http://localhost:4000/example/introducing-hydejack-9</id><content type="html" xml:base="http://localhost:4000/example/2020-07-03-introducing-hydejack-9/"><![CDATA[<p class="lead">Version 9 is the most complete version of Hydejack yet.</p>

<p><a href="#linking-in-style">Modernized</a> <a href="#whats-in-the-cards">design</a>, <a href="#ready-for-the-big-screen">big headlines</a>, big new features: <a href="#built-in-search">Built-In Search</a>, <a href="#sticky-table-of-contents">Sticky Table of Contents</a>, and <a href="#auto-hiding-navbar">Auto-Hiding Navbar</a>. That <a href="#and-much-more">and more</a> is Hydejack 9.</p>

<ul class="large-only" id="markdown-toc">
  <li><a href="#linking-in-style" id="markdown-toc-linking-in-style">Linking in Style</a></li>
  <li><a href="#ready-for-the-big-screen" id="markdown-toc-ready-for-the-big-screen">Ready for the Big Screen</a></li>
  <li><a href="#whats-in-the-cards" id="markdown-toc-whats-in-the-cards">What’s in the Cards?</a></li>
  <li><a href="#built-in-search" id="markdown-toc-built-in-search">Built-In Search</a></li>
  <li><a href="#auto-hiding-navbar" id="markdown-toc-auto-hiding-navbar">Auto-Hiding Navbar</a></li>
  <li><a href="#sticky-table-of-contents" id="markdown-toc-sticky-table-of-contents">Sticky Table of Contents</a></li>
  <li><a href="#and-much-more" id="markdown-toc-and-much-more">…and much more</a></li>
  <li><a href="#even-more-to-come" id="markdown-toc-even-more-to-come">Even More to Come</a></li>
  <li><a href="#get-it-now" id="markdown-toc-get-it-now">Get It Now</a></li>
</ul>

<h2 id="linking-in-style">Linking in Style</h2>

<p>Ever since the introduction of Dark Mode, link styles have been a bit of an issue. Specifically, finding an accent color that worked on both light and dark backgrounds was the problem. With Hydejack 9, the <a href="#linking-in-style">link style</a> has been revamped so that legibility is no longer tied to the choice of accent_color, giving you much more freedom in creating a unique design flavor for your site.</p>

<h2 id="ready-for-the-big-screen">Ready for the Big Screen</h2>

<p>The theme on which Hydejack is based was designed for a different era of the web. Hydejack has inherited many of its limitations, but over time I’ve made adjustments, such as centering the content column for better reading ergonomics.</p>

<p>With version 9, Hydejack takes full advantage of large displays. Whether it’s design indulgences such as oversized headlines, or quality of life improvements such as a floating table of contents, Hydejack now finds use for all that extra screen real estate<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<h2 id="whats-in-the-cards">What’s in the Cards?</h2>

<p>Hydejack 9 now lets you use content cards for both projects and posts. 
The cards have been redesigned with a new hover style and drop shadows and they retain their unique transition-to-next-page animations, which now also work on the <code class="language-plaintext highlighter-rouge">blog</code> layout. The new <code class="language-plaintext highlighter-rouge">grid</code> layout lets you do that.</p>

<p>Good images are key to making the most out of content cards. For that reason, a <a href="/docs/basics/#adding-images">chapter on images</a> has been added to the documentation.</p>

<h2 id="built-in-search">Built-In Search</h2>

<p>Hydejack now has Built-In Search. It even works offline. I’ve been prototyping many approaches and eventually settled on a fully client-side, off-the-main thread solution that perfectly fits the use case of personal sites and shows surprisingly good results<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>.</p>

<p>The new search UI is custom made for Hydejack and shows beautiful previews of your posts and pages, right on top of your regular content.</p>

<p>Together with the Auto-Hiding Navbar, your entire content library is now only a couple of keystrokes away.</p>

<h2 id="auto-hiding-navbar">Auto-Hiding Navbar</h2>

<p>A navbar that’s there when you need it, and disappears when you don’t. Simple as that.</p>

<h2 id="sticky-table-of-contents">Sticky Table of Contents</h2>

<p>Already a staple on so many sites on the web, this pattern is now also available in Hydejack. 
What’s unique about it is that it simply picks up the table of contents already created by kramdown’s <code class="language-plaintext highlighter-rouge">{:toc}</code> tag and transparently upgrades it to a fully dynamic version.</p>

<h2 id="and-much-more">…and much more</h2>

<p>Other noteworthy changes include:</p>
<ul>
  <li>Support for Jekyll 4</li>
  <li>Choice between MathJax and KaTeX for math rendering</li>
  <li>Use of <code class="language-plaintext highlighter-rouge">jekyll-include-cache</code> for drastically improved page building speeds</li>
  <li>New variables configuration file — adjust content width, sidebar width, font size, etc…</li>
  <li>…and the option to disable grouping projects by year.</li>
</ul>

<p>Read the the <a href="/CHANGELOG/" class="heading flip-title">CHANGELOG</a> for the full scope of features and improvements made in Hydejack 9.
Maybe just glance at it to confirm that it is indeed a pretty long list.</p>

<h2 id="even-more-to-come">Even More to Come</h2>

<p>New features for 9.1 are already lined up. Code block headers and code line highlights for even better technical blogging, as well as download buttons on the resume page for PDF, vCard, and Resume JSON are just around the corner.</p>

<h2 id="get-it-now">Get It Now</h2>
<p>The Free Version of Hydejack is now availabe on <a href="https://rubygems.org/gems/jekyll-theme-hydejack">RubyGems</a>
and for the first time also on <a href="https://github.com/hydecorp/hydejack/packages">GitHub Packages</a>. 
The source code is available on <a href="https://github.com/hydecorp/hydejack">GitHub</a> as always.</p>

<p>The PRO Version is scheduled to release on July 7th on Gumroad. Pre-Orders are open now:</p>

<div class="gumroad-product-embed" data-gumroad-product-id="nuOluY"><a href="https://gumroad.com/l/nuOluY">Loading…</a></div>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>If you are a fan of the old two-column layout, or don’t like modern design tropes such as mega headlines, Hydejack lets you revert these changes on a case-by-case basis via configuration options. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">

      <p>Search was mainly tested for English and German. Please let me know about issues in other languages. 
  While I’ve tried to find a multi-language solution, most showed drastically worse  results for the English base case.
  If you’re technically inclined, you can adopt the code located in <code class="language-plaintext highlighter-rouge">_includes/js/search-worker.js</code> to your needs. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="example" /><summary type="html"><![CDATA[Version 9 is the most complete version of Hydejack yet. Modernized design, big headlines, and big new features.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/jeremy-bishop@0,5x.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/jeremy-bishop@0,5x.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Example Content III</title><link href="http://localhost:4000/example/2018-06-01-example-content-iii/" rel="alternate" type="text/html" title="Example Content III" /><published>2018-06-01T00:00:00+09:00</published><updated>2023-10-01T22:00:51+09:00</updated><id>http://localhost:4000/example/example-content-iii</id><content type="html" xml:base="http://localhost:4000/example/2018-06-01-example-content-iii/"><![CDATA[<p>Hydejack offers a few additional features to markup your markdown.
Don’t worry, these are merely CSS classes added with kramdown’s <code class="language-plaintext highlighter-rouge">{:...}</code> syntax,
so that your content remains compatible with other Jekyll themes.</p>

<h2 id="large-tables">Large Tables</h2>

<table class="scroll-table">
  <thead>
    <tr>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
    </tr>
    <tr>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
    </tr>
    <tr>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
    </tr>
    <tr>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<h2 id="code-blocks">Code blocks</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Example can be run directly in your JavaScript console</span>

<span class="c1">// Create a function that takes two arguments and returns the sum of those</span>
<span class="c1">// arguments</span>
<span class="kd">var</span> <span class="nx">adder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Function</span><span class="p">(</span><span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">return a + b</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Call the function</span>
<span class="nf">adder</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="c1">// &gt; 8</span>
</code></pre></div></div>

<h2 id="math">Math</h2>
<p>Lorem ipsum \(f(x) = x^2\).</p>

\[\begin{aligned}
  \phi(x,y) &amp;= \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right) \\[2em]
            &amp;= \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j)            \\[2em]
            &amp;= (x_1, \ldots, x_n)
               \left(\begin{array}{ccc}
                 \phi(e_1, e_1)  &amp; \cdots &amp; \phi(e_1, e_n) \\
                 \vdots          &amp; \ddots &amp; \vdots         \\
                 \phi(e_n, e_1)  &amp; \cdots &amp; \phi(e_n, e_n)
               \end{array}\right)
               \left(\begin{array}{c}
                 y_1    \\
                 \vdots \\
                 y_n
               \end{array}\right)
\end{aligned}\]

<h2 id="message-boxes">Message boxes</h2>
<p class="message"><strong>NOTE</strong>: You can add a message box.</p>

<h2 id="large-text">Large text</h2>
<p class="lead">You can add large text.</p>

<h2 id="large-images">Large images</h2>
<p><img src="https://via.placeholder.com/800x100" alt="Full-width image" class="lead" width="800" height="100" /></p>

<h2 id="captions-to-images">Captions to images</h2>
<p class="figure"><img src="https://via.placeholder.com/800x100" alt="Full-width image" class="lead" width="800" height="100" />
A caption to an image.</p>

<h2 id="large-quotes">Large quotes</h2>
<blockquote class="lead">
  <p>You can make a quote “pop out”.</p>
</blockquote>

<h2 id="faded-text">Faded text</h2>
<p class="faded">I’m faded, faded, faded.</p>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="example" /><summary type="html"><![CDATA[A page showing Hydejack-specific markdown content.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/example-content-iii.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/example-content-iii.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Example Content II</title><link href="http://localhost:4000/example/2017-11-23-example-content-ii/" rel="alternate" type="text/html" title="Example Content II" /><published>2017-11-23T00:00:00+09:00</published><updated>2023-10-01T22:00:51+09:00</updated><id>http://localhost:4000/example/example-content-ii</id><content type="html" xml:base="http://localhost:4000/example/2017-11-23-example-content-ii/"><![CDATA[<p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p>

<p>There should be whitespace between paragraphs.</p>

<p>Text can be <strong>bold</strong>, <em>italic</em>, or <del>strikethrough</del>.</p>

<p><a href="another-page">Link to another page</a>.</p>

<ul class="large-only" id="markdown-toc">
  <li><a href="#header-2" id="markdown-toc-header-2">Header 2</a>    <ul>
      <li><a href="#header-3" id="markdown-toc-header-3">Header 3</a>        <ul>
          <li><a href="#header-4" id="markdown-toc-header-4">Header 4</a>            <ul>
              <li><a href="#header-5" id="markdown-toc-header-5">Header 5</a>                <ul>
                  <li><a href="#header-6" id="markdown-toc-header-6">Header 6</a></li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#theres-a-horizontal-rule-below-this" id="markdown-toc-theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</a></li>
      <li><a href="#here-is-an-unordered-list" id="markdown-toc-here-is-an-unordered-list">Here is an unordered list:</a></li>
      <li><a href="#and-an-ordered-list" id="markdown-toc-and-an-ordered-list">And an ordered list:</a></li>
      <li><a href="#and-a-nested-list" id="markdown-toc-and-a-nested-list">And a nested list:</a></li>
      <li><a href="#small-image" id="markdown-toc-small-image">Small image</a></li>
      <li><a href="#large-image" id="markdown-toc-large-image">Large image</a></li>
      <li><a href="#definition-lists" id="markdown-toc-definition-lists">Definition lists</a></li>
    </ul>
  </li>
</ul>

<h2 id="header-2">Header 2</h2>

<p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p>

<h3 id="header-3">Header 3</h3>

<blockquote>
  <p>This is a blockquote following a header.</p>

  <p>When something is important enough, you do it even if the odds are not in your favor.</p>
</blockquote>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nf">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nf">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Ruby code with syntax highlighting</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="header-4">Header 4</h4>

<ul>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
</ul>

<h5 id="header-5">Header 5</h5>

<ol>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
</ol>

<h6 id="header-6">Header 6</h6>

<table>
  <thead>
    <tr>
      <th style="text-align: left">head1</th>
      <th style="text-align: left">head two</th>
      <th style="text-align: left">three</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good swedish fish</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">out of stock</td>
      <td style="text-align: left">good and plenty</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">oreos</code></td>
      <td style="text-align: left">hmm</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">zoute</code> drop</td>
      <td style="text-align: left">yumm</td>
    </tr>
  </tbody>
</table>

<h3 id="theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</h3>

<hr />

<h3 id="here-is-an-unordered-list">Here is an unordered list:</h3>

<ul>
  <li>Item foo</li>
  <li>Item bar</li>
  <li>Item baz</li>
  <li>Item zip</li>
</ul>

<h3 id="and-an-ordered-list">And an ordered list:</h3>

<ol>
  <li>Item one</li>
  <li>Item two</li>
  <li>Item three</li>
  <li>Item four</li>
</ol>

<h3 id="and-a-nested-list">And a nested list:</h3>

<ul>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item
        <ul>
          <li>level 3 item</li>
          <li>level 3 item</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item</li>
</ul>

<h3 id="small-image">Small image</h3>

<p><img src="https://assets-cdn.github.com/images/icons/emoji/octocat.png" alt="" /></p>

<h3 id="large-image">Large image</h3>

<p><img src="https://guides.github.com/activities/hello-world/branching.png" alt="" /></p>

<h3 id="definition-lists">Definition lists</h3>

<dl>
  <dt>Name</dt>
  <dd>Godzilla</dd>
  <dt>Born</dt>
  <dd>1952</dd>
  <dt>Birthplace</dt>
  <dd>Japan</dd>
  <dt>Color</dt>
  <dd>Green</dd>
</dl>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Or is it?
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The final element.
</code></pre></div></div>]]></content><author><name>&lt;Kim&gt; &lt;SunWoo&gt;</name><email>&lt;ttcoristory@naver.com&gt;</email></author><category term="example" /><summary type="html"><![CDATA[A page showing how regular markdown content is styled in Hydejack.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/example-content-ii.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/example-content-ii.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>